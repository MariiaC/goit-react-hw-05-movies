{"version":3,"file":"static/js/558.248a3ed0.chunk.js","mappings":"8JA+BA,IA5BmB,SAAC,GAAsB,IAApBA,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAG3B,OACE,wBACGD,GACCA,EAAME,KAAI,SAAAC,GAAI,OACd,yBACA,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAKE,IAAMJ,MAAO,CAAEK,KAAML,GAA/C,SACOE,EAAKI,SAFHJ,EAAKE,GADA,KASrB,C,qECjBD,EAAkC,gCAAlC,EAA2E,uB,SCW3E,MARA,WACE,OACE,gBAAKG,UAAWC,EAAhB,UACE,SAAC,MAAD,CAAuBD,UAAWC,KAGvC,C,2IC2CD,UA9CkB,WACd,OAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAAwCC,EAAAA,EAAAA,IAAgB,CAAC,GAAzD,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAaF,EAAaG,IAAI,SAC9BC,GAAWC,EAAAA,EAAAA,MA6BjB,OAnBAC,EAAAA,EAAAA,YAAU,WACN,GAAIJ,EAAY,CACZ,IAAMK,EAAa,mCAAG,2FAClBT,GAAW,GADO,kBAGYU,EAAAA,EAAAA,qBAAyBN,GAHrC,OAGRO,EAHQ,OAIdb,EAAea,GAJD,gDAMdC,QAAQC,IAAR,MANc,yBAQdb,GAAW,GARG,4EAAH,qDAWnBS,GACH,CACJ,GAAE,CAACL,KAKA,6BACI,kBAAMU,SA3BO,SAAAC,GACjBA,EAAMC,iBACNb,EAAgB,CAAEc,MAAOF,EAAMG,OAAOC,SAASF,MAAMG,MAAMC,eAC9D,EAwBO,WACI,kBAAOC,KAAK,OAAOC,KAAK,QAAQC,WAAS,KACzC,mBAAQF,KAAK,SAAb,uBAEHvB,IAAW,SAAC,IAAD,IACXF,IAAe,SAAC,IAAD,CAAYX,MAAOW,EAAaV,MAAQmB,MAGnE,C,2ECjDKmB,EAAU,mCAEhBC,IAAAA,SAAAA,QAAyB,gCAGzB,IAAMC,EAAa,mCAAG,oGACGD,IAAAA,IAAA,qCAAwCD,IAD3C,cACdG,EADc,yBAEbA,EAASC,KAAKC,SAFD,2CAAH,qDAKbC,EAAoB,mCAAG,WAAMC,GAAN,uFACJN,IAAAA,IAAA,+BACGD,EADH,4DAC8DO,IAF1D,cACrBJ,EADqB,yBAIpBA,EAASC,KAAKC,SAJM,2CAAH,sDAQpBG,EAAiB,mCAAG,WAAMC,GAAN,uFACDR,IAAAA,IAAA,gBACZQ,EADY,oBACOT,EADP,oBADC,cAClBG,EADkB,yBAIjBA,EAASC,MAJQ,2CAAH,sDAQjBM,EAAW,mCAAG,WAAMD,GAAN,uFACKR,IAAAA,IAAA,gBACZQ,EADY,4BACeT,EADf,oBADL,cACZG,EADY,yBAIXA,EAASC,KAAKO,MAJH,2CAAH,sDAQXC,EAAY,mCAAG,WAAMH,GAAN,uFACIR,IAAAA,IAAA,gBACZQ,EADY,4BACeT,EADf,2BADJ,cACbG,EADa,yBAIZA,EAASC,KAAKC,SAJF,2CAAH,sDASZpB,EAAM,CACViB,cAAAA,EACAI,qBAAAA,EACAE,kBAAAA,EACAE,YAAAA,EACAE,aAAAA,GAGF,K","sources":["components/EditorList/EditorList.jsx","webpack://react-homework-template/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loaer.jsx","components/MoviePage/MoviePage.jsx","services/Api.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nimport {Link } from \"react-router-dom\";\n\nconst EditorList = ({ films, state }) => {\n\n  //return\n  return (\n    <ul>\n      {films &&\n        films.map(film => (\n        <li key={film.id}>\n        <Link to={`/movies/${film.id}`} state={{ from: state }}>\n              {film.title}\n        </Link>\n        </li>\n        ))}\n    </ul>\n  );\n};\n\n//props\n\nEditorList.propTypes = {\n  films: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n    })\n  ),\n};\n\nexport default EditorList;","// extracted by mini-css-extract-plugin\nexport default {\"loader__wrapper\":\"Loader_loader__wrapper__rPycD\",\"loader\":\"Loader_loader__+lRPl\"};","import { MdOutlineCameraswitch } from 'react-icons/md';\nimport s from './Loader.module.css';\n\n\nfunction Loader() {\n  return (\n    <div className={s.loader__wrapper}>\n      <MdOutlineCameraswitch className={s.loader} />\n    </div>\n  );\n};\n\nexport default Loader;\n//з минулої дз","import { useState, useEffect } from 'react';\nimport { useLocation, useSearchParams } from \"react-router-dom\";\nimport Api from '../../services/Api';\nimport Loader from '../Loader/Loaer';\nimport EditorList from '../EditorList/EditorList';\n\n\nconst MoviePage = () => {\n    const [searchFilms, setSearchFilms] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [searchParams, setSearchParams] = useSearchParams({});\n    const queryMovie = searchParams.get('query');\n    const location = useLocation();\n\n\n    //при сабміті\n    const handleSubmit = event => {\n        event.preventDefault();\n        setSearchParams({ query: event.target.elements.query.value.toLowerCase() });\n    };\n  \n    //прописуємо юзефект\n    useEffect(() => {\n        if (queryMovie) {\n            const onSearchMovie = async () => {\n                setLoading(true);\n                try {\n                    const searchMovie = await Api.fetchSearchByKeyword(queryMovie);\n                    setSearchFilms(searchMovie);\n                } catch (error) {\n                    console.log(error);\n                } finally {\n                    setLoading(false);\n                }\n            }\n            onSearchMovie();\n        }\n    }, [queryMovie]);\n\n\n    //ретьорн\n    return (\n        <main>\n            <form onSubmit={handleSubmit}>\n                <input type=\"text\" name=\"query\" autoFocus />\n                <button type=\"submit\">Search</button>\n            </form>\n            {loading && <Loader />}\n            {searchFilms && <EditorList films={searchFilms} state={ location} />}\n        </main>\n    );\n};\n\nexport default MoviePage;","import axios from 'axios';\n\nconst API_KEY = 'f128f86d2bf775a9e4af5bbb9b38ef94';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\n//робимо асинк та повер результ тренд\nconst fetchTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n//пошук за keyword\nconst fetchSearchByKeyword = async keyword => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${keyword}`\n  );\n  return response.data.results;\n};\n\n//тепер за ід деталі\nconst fetchMovieDetails = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\n//дістаємо акторів\nconst fetchActors = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\n//reviews\nconst fetchReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n\n\n//експортуємо всіх\nconst Api = {\n  fetchTrending,\n  fetchSearchByKeyword,\n  fetchMovieDetails,\n  fetchActors,\n  fetchReviews,\n};\n\nexport default Api;"],"names":["films","state","map","film","to","id","from","title","className","s","useState","searchFilms","setSearchFilms","loading","setLoading","useSearchParams","searchParams","setSearchParams","queryMovie","get","location","useLocation","useEffect","onSearchMovie","Api","searchMovie","console","log","onSubmit","event","preventDefault","query","target","elements","value","toLowerCase","type","name","autoFocus","API_KEY","axios","fetchTrending","response","data","results","fetchSearchByKeyword","keyword","fetchMovieDetails","movieId","fetchActors","cast","fetchReviews"],"sourceRoot":""}